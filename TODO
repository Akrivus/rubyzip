write ZipFile.

unit test writeFile (onExistsProc)
unit test rename onExistsProc
unit test yield on ZipFile::getInputStream
unit test adding directories (and implement)
unit test adding directories recursively (and implement)
unit test ZipFile.checkIntegrity method (and implement)
unit test and implement recursive extract (and implement)

performance improve method
ZipStreamableZipEntry.writeToZipOutputStream by not
decompressing/compressing the data.

release 0.4.0

implement small gui app on top, to exercise library and to discover
what features should be added to rubyzip. Use tk.

implement setting the date correctly in ZipEntry with now as default

release 0.4.1 with small gui demo app and fixes

Refactor ZipFileTest to reduce duplicated code, divide into different
test classes if different fixtures are required and use setup/teardown
some more.

run with -w switch

Add install.rb file

move test files into test/ (remember binary CVS tags, when moving)

release 0.4.1

Write Tk or FOX zip demo application (add as separate module in CVS)

Write scarf-like
(http://www.pragmaticprogrammer.com/ruby/downloads/scarf.html) ruby
module that uses rubyzip. Perhaps based on RubyGems
(http://rubygems.sf.net)

